#!/usr/bin/env bash

EMERGE_OPTS="-j 2 --with-bdeps=y --complete-graph --keep-going"
ONLY_WORLD=false
DEBUG=false
PRETEND=false
SYNC=false

while getopts "dpsw" OPTION; do
    case $OPTION in
	d)
	    DEBUG=true
	    ;;
	p)
	    PRETEND=true
	    ;;
	s)
		SYNC=true
		;;
	w)
	    ONLY_WORLD=true
	    ;;
    esac
done

printObsoletePackages() {
		cat <<EOF
The following obsolete packages where found:
--------------------------------------------
${OBSOLETE_PACKAGES}
--------------------------------------------
Attempting to update those packages
EOF
}

checkConsistency() {
	revdep-rebuild -- --keep-going || exit 1
	perl-cleaner --all
	haskell-updater
}

if $DEBUG; then
	set -x
fi

if $SYNC; then
	emerge --sync
fi

# First try update all pakckages that become obsolete since this also
# means that some other packages will possibly be updated because of
# rebuilds, which may also include packages that would have been
# updated at a later stage anyways. We therefore prevent emerging the
# same package twice.
if ! $ONLY_WORLD; then
	OBSOLETE_PACKAGES=$(TEST_FOR_REDUNDANCY=false eix -T --only-names)
	if [[ -z $OBSOLETE_PACKAGES ]] ; then
		echo "No obsolete packages packages found"
	else
		printObsoletePackages
		echo "Packages that became obsolete found."
		echo "Running emerge…"
		if $PRETEND; then
			emerge $EMERGE_OPTS -tpv $OBSOLETE_PACKAGES || exit 1
		else
			emerge ${EMERGE_OPTS} -1u ${OBSOLETE_PACKAGES}

			OBSOLETE_PACKAGES=$(TEST_FOR_REDUNDANCY=false eix -T --only-names)
			if [[ ! -z ${OBSOLETE_PACKAGES} ]]; then
				echo "Still found some more obsolete packages."
				echo "Switching to single emerge mode…"
				printObsoletePackages
				for p in $OBSOLETE_PACKAGES ; do
					echo "Now trying to update $p"
					eix -I -e $p
					emerge $EMERGE_OPTS -1u $p
				done
			fi
		fi
	fi
fi

# Update all glsa affected packages
glsa-check -f affected || exit 1

# Then proceed with all world packages that have no fetch restrictions
# but updates
PACKAGES=$(eix -I -u --world-file --only-names --not -\( --restrict-fetch -\) )
if [[ -z $PACKAGES ]] ; then
    echo "No world packages with updated"
else
    echo "World packages with updates"
    echo "${PACKAGES}"
    $PRETEND || emerge $EMERGE_OPTS -t $PACKAGES || exit 1
fi

$ONLY_WORLD && exit

emerge @preserved-rebuild

checkConsistency

RESTRICT_FETCH_PACKAGES=$(eix -I -u --world-file --only-names --restrict-fetch )
if [[ ! -z $RESTRICT_FETCH_PACKAGES ]]; then
    echo "The following world packages have fetch restrictions"
    echo "Please resovle those"
    emerge -pv ${RESTRICT_FETCH_PACKAGES}
fi
