#!/bin/bash

EMERGE_OPTS="-j 2"
ONLY_WORLD=false
DEBUG=false
PRETEND=false

while getopts "dpw" OPTION; do
    case $OPTION in
	d)
	    DEBUG=true
	    ;;
	p)
	    PRETEND=true
	    ;;
	w)
	    ONLY_WORLD=true
	    ;;
    esac
done

$DEBUG && set -x

# First update all glsa affected packages
glsa-check -f affected || exit 1

# Then proceed with all world packages that have no fetch restrictions
# but updates
PACKAGES=$(eix -I -u --world-file --only-names --not -\( --restrict-fetch -\) )
if [[ -z $PACKAGES ]] ; then
    echo "Stage 1: Skipping, no world packages"
else
    echo "Stage 1: World packages with updates"
    echo "${PACKAGES}"
    $PRETEND || emerge $EMERGE_OPTS -t $PACKAGES --keep-going || exit 1
fi

$ONLY_WORLD && exit

# If -w was not given, proceed with packages that become obsolete. For
# example because the ebuild for the installed version got deleted
PACKAGES=$(TEST_FOR_REDUNDANCY=false eix -T --only-names)
if [[ -z $PACKAGES ]] ; then
    echo "Stage2: Skipping, no obsolete packages"
else
    echo "Stage 2: Non-World packages that became obsolete"
    emerge $EMERGE_OPTS -tpv $PACKAGES || exit 1
    if ! $PRETEND ; then
	for p in $PACKAGES ; do
	    echo "Now trying to update $p"
	    eix -I -e $p
	    emerge $EMERGE_OPTS -1u $p
	done
    fi
fi

emerge @preserved-rebuild
revdep-rebuild -- --keep-going || exit 1

RESTRICT_FETCH_PACKAGES=$(eix -I -u --world-file --only-names --restrict-fetch )
if [[ ! -z $RESTRICT_FETCH_PACKAGES ]]; then
    echo "The following world packages have fetch restrictions"
    echo "Please resovle those"
    emerge -pv ${RESTRICT_FETCH_PACKAGES}
fi
